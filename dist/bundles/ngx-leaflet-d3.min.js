/*! @asymmetrik/ngx-leaflet-d3 - 0.2.0 - Copyright Asymmetrik, Ltd. 2007-2017 - All Rights Reserved. + */
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@asymmetrik/ngx-leaflet"),require("leaflet"),require("rxjs"),require("@asymmetrik/leaflet-d3")):"function"==typeof define&&define.amd?define(["exports","@angular/core","@asymmetrik/ngx-leaflet","leaflet","rxjs","@asymmetrik/leaflet-d3"],t):t(e.ngxLeafletD3={},e.ng.core,e.ngxLeaflet,e.L,e.Rx)}(this,function(e,t,i,n,r){"use strict";var a=/** @class */function(){function e(e){
// Hexbin data binding
this.hexbinData=[],
// Interaction events
this.hexbinMouseover=new t.EventEmitter,this.hexbinMouseout=new t.EventEmitter,this.hexbinClick=new t.EventEmitter,
// Fired when the layer is created
this.layerReady=new t.EventEmitter,this.leafletDirective=new i.LeafletDirectiveWrapper(e)}/** @nocollapse */
return e.prototype.ngOnInit=function(){var e=this;this.leafletDirective.init();var t=this.leafletDirective.getMap();this.hexbinLayer=n.hexbinLayer(this.hexbinOptions),
// Fire the ready event
this.layerReady.emit(this.hexbinLayer),
// register for the hexbin events
this.hexbinLayer.dispatch().on("mouseover",function(t){e.hexbinMouseover.emit(t)}),this.hexbinLayer.dispatch().on("mouseout",function(t){e.hexbinMouseout.emit(t)}),this.hexbinLayer.dispatch().on("click",function(t){e.hexbinClick.emit(t)}),this.hexbinLayer.addTo(t),
// Initialize the data (in case the data was set before the directive was initialized)
this.setHexbinData(this.hexbinData)},e.prototype.ngOnChanges=function(e){
// Set the new data
e.hexbinData&&this.setHexbinData(e.hexbinData.currentValue)},e.prototype.setHexbinData=function(e){
// Only if there is a hexbinLayer do we apply the data
null!=this.hexbinLayer&&this.hexbinLayer.data(e)},e.decorators=[{type:t.Directive,args:[{selector:"[leafletHexbin]"}]}],e.ctorParameters=function(){return[{type:i.LeafletDirective}]},e.propDecorators={hexbinData:[{type:t.Input,args:["leafletHexbin"]}],hexbinOptions:[{type:t.Input,args:["leafletHexbinOptions"]}],hexbinMouseover:[{type:t.Output,args:["leafletHexbinMouseover"]}],hexbinMouseout:[{type:t.Output,args:["leafletHexbinMouseout"]}],hexbinClick:[{type:t.Output,args:["leafletHexbinClick"]}],layerReady:[{type:t.Output,args:["leafletHexbinLayerReady"]}]},e}(),o=/** @class */function(){function e(e){this.pingObserverReady=new t.EventEmitter,this.leafletDirective=new i.LeafletDirectiveWrapper(e)}/**
     * Submit a ping to the ping layer.
     *
     * @param data Contains the lat/lon information to generate the ping
     * @param cssClass Optional parameter specifying the css class to apply to the ping
     */
/** @nocollapse */
return e.prototype.ngOnInit=function(){var e=this;this.leafletDirective.init();var t=this.leafletDirective.getMap();this.pingLayer=n.pingLayer(this.pingOptions).addTo(t),
// Handle incoming ping events
this.pingSource=r.Observable.create(function(t){e.pingObserver=t,e.pingObserverReady.emit(e.pingObserver)}).subscribe(function(t){null!=t&&e.ping(t.data,t.cssClass)})},e.prototype.ping=function(e,t){null!=this.pingLayer&&this.pingLayer.ping(e,t)},e.decorators=[{type:t.Directive,args:[{selector:"[leafletPing]"}]}],e.ctorParameters=function(){return[{type:i.LeafletDirective}]},e.propDecorators={pingOptions:[{type:t.Input,args:["leafletPingOptions"]}],pingObserverReady:[{type:t.Output,args:["leafletPingObserver"]}]},e}(),s=/** @class */function(){function e(){}/** @nocollapse */
return e.forRoot=function(){return{ngModule:e,providers:[]}},e.decorators=[{type:t.NgModule,args:[{imports:[i.LeafletModule],exports:[a,o],declarations:[a,o]}]}],e.ctorParameters=function(){return[]},e}();e.LeafletD3Module=s,Object.defineProperty(e,"__esModule",{value:!0})});